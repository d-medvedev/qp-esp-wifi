/*$file${../main::qhsm-wifi.h} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv*/
/*
* Model: wifi.qm
* File:  ${../main::qhsm-wifi.h}
*
* This code has been generated by QM 5.2.4 <www.state-machine.com/qm>.
* DO NOT EDIT THIS FILE MANUALLY. All your changes will be lost.
*
* SPDX-License-Identifier: GPL-3.0-or-later
*
* This generated code is open source software: you can redistribute it under
* the terms of the GNU General Public License as published by the Free
* Software Foundation.
*
* This code is distributed in the hope that it will be useful, but WITHOUT
* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
* FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
* more details.
*
* NOTE:
* Alternatively, this generated code may be distributed under the terms
* of Quantum Leaps commercial licenses, which expressly supersede the GNU
* General Public License and are specifically designed for licensees
* interested in retaining the proprietary status of their code.
*
* Contact information:
* <www.state-machine.com/licensing>
* <info@state-machine.com>
*/
/*$endhead${../main::qhsm-wifi.h} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^*/
#ifndef QHSM_WIFI_SM_H
#define QHSM_WIFI_SM_H

enum wifiSignals {
    DISCONNECTED_SIG = Q_USER_SIG,
    CONNECTING_SIG,
    CONNECTED_SIG,
    GOT_IP_SIG,
    LOST_IP_SIG,
    MAX_SIG_SIG
};

/*$declare${AOs::WiFi} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv*/

/*${AOs::WiFi} .............................................................*/
typedef struct WiFi {
/* protected: */
    QActive super;

/* public: */
} WiFi;
extern WiFi WiFi_obj;

/* protected: */
QState WiFi_initial(WiFi * const me, void const * const par);
QState WiFi_disconnected(WiFi * const me, QEvt const * const e);
QState WiFi_connecting(WiFi * const me, QEvt const * const e);
QState WiFi_sta_start(WiFi * const me, QEvt const * const e);
QState WiFi_connected(WiFi * const me, QEvt const * const e);
QState WiFi_got_ip(WiFi * const me, QEvt const * const e);
/*$enddecl${AOs::WiFi} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^*/
/*$declare${AOs::WiFi_ctor} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv*/

/*${AOs::WiFi_ctor} ........................................................*/
void WiFi_ctor(void);
/*$enddecl${AOs::WiFi_ctor} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^*/
/*$declare${AOs::AO_WiFi} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv*/

/*${AOs::AO_WiFi} ..........................................................*/
extern QActive * const AO_WiFi;
/*$enddecl${AOs::AO_WiFi} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^*/
#endif
