/*$file${../main::bip_cloud.h} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv*/
/*
* Model: wifi.qm
* File:  ${../main::bip_cloud.h}
*
* This code has been generated by QM 5.2.4 <www.state-machine.com/qm>.
* DO NOT EDIT THIS FILE MANUALLY. All your changes will be lost.
*
* SPDX-License-Identifier: GPL-3.0-or-later
*
* This generated code is open source software: you can redistribute it under
* the terms of the GNU General Public License as published by the Free
* Software Foundation.
*
* This code is distributed in the hope that it will be useful, but WITHOUT
* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
* FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
* more details.
*
* NOTE:
* Alternatively, this generated code may be distributed under the terms
* of Quantum Leaps commercial licenses, which expressly supersede the GNU
* General Public License and are specifically designed for licensees
* interested in retaining the proprietary status of their code.
*
* Contact information:
* <www.state-machine.com/licensing>
* <info@state-machine.com>
*/
/*$endhead${../main::bip_cloud.h} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^*/
#ifndef QHSM_MQTT_H_
#define QHSM_MQTT_H_


#include <stdio.h>
#include <stdint.h>
#include <stddef.h>
#include <string.h>
#include "esp_wifi.h"
#include "esp_system.h"
#include "esp_event.h"
#include "esp_netif.h"

#include "freertos/FreeRTOS.h"
#include "freertos/task.h"
#include "freertos/semphr.h"
#include "freertos/queue.h"

#include "lwip/sockets.h"
#include "lwip/dns.h"
#include "lwip/netdb.h"

#include "mqtt_client.h"

#include "esp_log.h"

#include "mqtt_settings.h"
#include "bsp.h"
#include "wifi_button.h"

typedef void (*func_cb_t)(void *data, uint32_t len_data);

#define MAC_ADDR_SIZE 6

uint8_t mac_address[6] = {0x00, 0x11, 0x22, 0x33, 0x44, 0x55};


typedef struct topic_subscribe_set {
    const char*     topic;
    int             qos;
    func_cb_t       hanler_provide;
} topic_subscribe_set_t;

topic_subscribe_set_t list_topics_subscribe[];

esp_err_t mqtt_start(void);
esp_err_t mqtt_stop(void);
esp_err_t mqtt_reconnect(void);
esp_err_t mqtt_disconnect(void);

esp_err_t mqtt_app_init(topic_subscribe_set_t* bd_topics_subscribe);
esp_err_t mqtt_app_connect(void);
esp_err_t mqtt_app_disconnect(void);
bool check_mqtt_is_connect(void);

int mqtt_publish(const char *topic, const char *data, int len, int qos, int retain);

#endif // QHSM_MQTT_H_

