/*$file${../main::wifi_button.h} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv*/
/*
* Model: wifi.qm
* File:  ${../main::wifi_button.h}
*
* This code has been generated by QM 5.2.4 <www.state-machine.com/qm>.
* DO NOT EDIT THIS FILE MANUALLY. All your changes will be lost.
*
* SPDX-License-Identifier: GPL-3.0-or-later
*
* This generated code is open source software: you can redistribute it under
* the terms of the GNU General Public License as published by the Free
* Software Foundation.
*
* This code is distributed in the hope that it will be useful, but WITHOUT
* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
* FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
* more details.
*
* NOTE:
* Alternatively, this generated code may be distributed under the terms
* of Quantum Leaps commercial licenses, which expressly supersede the GNU
* General Public License and are specifically designed for licensees
* interested in retaining the proprietary status of their code.
*
* Contact information:
* <www.state-machine.com/licensing>
* <info@state-machine.com>
*/
/*$endhead${../main::wifi_button.h} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^*/
#ifndef WF_BUTTON_H
#define WF_BUTTON_H

#define DEBOUNCE_TIME 3

enum wifiSignals {
    DISCONNECTED_SIG = Q_USER_SIG,
    STA_STARTED_SIG,
    CONNECT_SIG,
    CONNECTED_SIG,
    CONNECTION_LOST_SIG,
    GOT_IP_SIG,
    LOST_IP_SIG,
    BUTTON_PRESSED_SIG,
    START_TELEMETRY_SIG,
    STOP_TELEMETRY_SIG,
    SEND_TIMEOUT_SIG,
    DISCONNECT_SIG,
    MQTT_CONNECTED_SIG,
    MQTT_DISCONNECTED_SIG,

    MAX_PUB_SIG
};

/*$declare${AOs::Button} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv*/

/*${AOs::Button} ...........................................................*/
typedef struct Button {
/* protected: */
    QActive super;

/* public: */

/* private: */
    QTimeEvt timeEvt;
    uint32_t press_cntr;
} Button;
extern Button Button_obj;

/* protected: */
QState Button_initial(Button * const me, void const * const par);
QState Button_Button(Button * const me, QEvt const * const e);
/*$enddecl${AOs::Button} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^*/
/*$declare${AOs::WiFi} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv*/

/*${AOs::WiFi} .............................................................*/
typedef struct WiFi {
/* protected: */
    QActive super;

/* public: */
} WiFi;
extern WiFi WiFi_obj;

/* protected: */
QState WiFi_initial(WiFi * const me, void const * const par);
QState WiFi_sta_started(WiFi * const me, QEvt const * const e);
QState WiFi_connected(WiFi * const me, QEvt const * const e);
QState WiFi_disconnect(WiFi * const me, QEvt const * const e);
QState WiFi_try_connect(WiFi * const me, QEvt const * const e);
QState WiFi_got_ip(WiFi * const me, QEvt const * const e);
QState WiFi_init(WiFi * const me, QEvt const * const e);
/*$enddecl${AOs::WiFi} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^*/
/*$declare${AOs::Cloud} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv*/

/*${AOs::Cloud} ............................................................*/
typedef struct Cloud {
/* protected: */
    QActive super;

/* public: */

/* private: */
    QTimeEvt sendTimeEvt;
} Cloud;
extern Cloud Cloud_obj;

/* protected: */
QState Cloud_initial(Cloud * const me, void const * const par);
QState Cloud_active(Cloud * const me, QEvt const * const e);
QState Cloud_connected(Cloud * const me, QEvt const * const e);
QState Cloud_idle(Cloud * const me, QEvt const * const e);
QState Cloud_try_connect(Cloud * const me, QEvt const * const e);
/*$enddecl${AOs::Cloud} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^*/

/*$declare${Shared::ButtonEvt} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv*/

/*${Shared::ButtonEvt} .....................................................*/
typedef struct {
/* protected: */
    QEvt super;

/* public: */
    uint8_t buttonNum;
} ButtonEvt;
/*$enddecl${Shared::ButtonEvt} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^*/
/*$declare${Shared::WifiEvt} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv*/

/*${Shared::WifiEvt} .......................................................*/
typedef struct {
/* protected: */
    QEvt super;

/* public: */
    uint8_t n;
} WifiEvt;
/*$enddecl${Shared::WifiEvt} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^*/
/*$declare${Shared::CloudEvt} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv*/

/*${Shared::CloudEvt} ......................................................*/
typedef struct {
/* protected: */
    QEvt super;
} CloudEvt;
/*$enddecl${Shared::CloudEvt} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^*/

/*$declare${Shared::AO_WiFi} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv*/

/*${Shared::AO_WiFi} .......................................................*/
extern QActive * const AO_WiFi;
/*$enddecl${Shared::AO_WiFi} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^*/
/*$declare${Shared::AO_Button} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv*/

/*${Shared::AO_Button} .....................................................*/
extern QActive * const AO_Button;
/*$enddecl${Shared::AO_Button} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^*/
/*$declare${Shared::AO_Cloud} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv*/

/*${Shared::AO_Cloud} ......................................................*/
extern QActive * const AO_Cloud;
/*$enddecl${Shared::AO_Cloud} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^*/

/*$declare${Shared::WiFi_ctor} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv*/

/*${Shared::WiFi_ctor} .....................................................*/
void WiFi_ctor(void);
/*$enddecl${Shared::WiFi_ctor} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^*/
/*$declare${Shared::Button_ctor} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv*/

/*${Shared::Button_ctor} ...................................................*/
void Button_ctor(void);
/*$enddecl${Shared::Button_ctor} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^*/
/*$declare${Shared::Cloud_ctor} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv*/

/*${Shared::Cloud_ctor} ....................................................*/
void Cloud_ctor(void);
/*$enddecl${Shared::Cloud_ctor} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^*/

#endif
